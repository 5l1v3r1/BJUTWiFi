apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

android {
    compileSdkVersion 24
    buildToolsVersion '24.0.2'
    signingConfigs {
        release
    }
    defaultConfig {
        applicationId "me.liuyun.bjutlgn"
        minSdkVersion 21
        targetSdkVersion 24
        versionCode 1
        versionName "0.1"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    dataBinding {
        enabled = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:design:24.2.1'
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.android.support:cardview-v7:24.2.1'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.jakewharton:butterknife:8.4.0'
    compile 'com.google.android.agera:agera:1.2.0-beta2'
    compile 'me.drakeet.retrofit2:adapter-agera:2.1.0'
    compile 'com.google.android.agera:database:1.2.0-beta2'
    compile 'com.github.HotBitmapGG:RingProgressBar:V1.2.2'
    compile 'com.diogobernardino:williamchart:2.3.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
}

def propFile = file('../signing.properties')
if (propFile.canRead()) {
    def Properties p = new Properties()
    p.load(new FileInputStream(propFile))

    if (p != null
            && p.containsKey('STORE_FILE')
            && p.containsKey('STORE_PASSWORD')
            && p.containsKey('KEY_ALIAS')
            && p.containsKey('KEY_PASSWORD')
    ) {
        println "RELEASE_BUILD: Signing..."

        android.signingConfigs.release.storeFile = file(p['STORE_FILE'])
        android.signingConfigs.release.storePassword = p['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = p['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = p['KEY_PASSWORD']

    } else {
        println "RELEASE_BUILD: Required properties in signing.properties are missing"
        android.buildTypes.release.signingConfig = null
    }

} else {
    println "RELEASE_BUILD: signing.properties not found"
    android.buildTypes.release.signingConfig = null
}